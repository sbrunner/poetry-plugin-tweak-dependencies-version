---
name: Continuous integration

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Continuous integration
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v3

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - run: pip install --use-pep517 .

      - run: (cd example/; poetry build -v)
      - run: unzip example/dist/example-0.1.0-py3-none-any.whl
      - run: cat example-0.1.0.dist-info/METADATA
      - run: "grep 'Requires-Dist: aaaaa (>=1.0.0,<2.0.0)' example-0.1.0.dist-info/METADATA"
      - run: "grep 'Requires-Dist: bbbbb (>=1.2.0,<1.3.0)' example-0.1.0.dist-info/METADATA"
      - run: "grep 'Requires-Dist: ccccc (>=1.2.3,<1.2.4)' example-0.1.0.dist-info/METADATA"
      - run: "grep 'Requires-Dist: ddddd (==1.2.3)' example-0.1.0.dist-info/METADATA"
      - run: rm -rf example/dist/example-0.1.0-py3-none-any.whl example-0.1.0.dist-info example/__init__.py

      - run: poetry install
      - run: poetry run prospector --output=pylint

      - name: Init pypi
        run: |
          echo "[pypi]" > ~/.pypirc
          echo "username = ${{ secrets.PYPI_USERNAME }}" >> ~/.pypirc
          echo "password = ${{ secrets.PYPI_PASSWORD }}" >> ~/.pypirc
          pip install --user wheel twine
        if: env.GITHUB_REF_TYPE == 'tag'

      - name: Publish PyPI
        run: c2cciutils-publish
        if: env.GITHUB_REF_TYPE == 'tag'
